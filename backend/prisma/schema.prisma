// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @unique @default(autoincrement())
  name          String    @unique
  email         String    @unique
  avatar        Avatar    @relation(fields:[avatarid], references: [id])
  avatarid      Int
  // skin          Skin      @relation(fields:[skinid], references: [id])
  // skinid        Int
  rank          Int       @unique
  twofactauth   Boolean   @default(false)
  twofactsecret String?
  // channels      Channel[] @relation("userchannels")
  // chanRole      Channel[] @relation("chanRole")
  // gamesplayed   Game[]    @relation("gamesplayed")
  // gameswon      Game[]    @relation("gameswon")
  // friends       User[]    @relation("friendship")
  // friended      User[]    @relation("friendship")
  // blockedusers  User[]    @relation("blocked")
  // blockedby     User[]    @relation("blocked")
  // messages      Message[] @relation("usermessage")
}

// model Message {
//   id        Int     @id @unique @default(autoincrement())
//   sender    User    @relation("usermessage", fields:[senderid], references: [id])
//   senderid  Int
//   channel   Channel @relation("channelmessage", fields:[channelid], references: [id])
//   channelid Int
//   datetime  DateTime
//   Content   String
// }

model Avatar {
  id    Int     @id @unique @default(autoincrement())
  name  String  @unique
  url   String  @unique
  users User[]
}

// model Skin {
//   id    Int     @id @unique @default(autoincrement())
//   name  String  @unique
//   url   String  @unique
//   users User[]
// }

// model Channel {
//   id        Int       @id @unique @default(autoincrement())
//   name      String?   @unique
//   chantype  ChanType  @default(public)
//   password  String
//   members   User[]    @relation("userchannels")
//   operators User[]    @relation("chanRole")
//   messages  Message[] @relation("channelmessage")
// }

// model Game {
//   id        Int     @id @unique @default(autoincrement())
//   players   User[]  @relation("gamesplayed")
//   winner    User    @relation("gameswon", fields:[winnerid], references: [id])
//   winnerid  Int
//   scores    Int[]
// }

// enum ChanType {
//   public
//   private
//   protected
// }